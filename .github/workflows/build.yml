name: Build and Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build, Test, and Upload Artifacts
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13.0

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt

      - name: Cache Hugging Face models
        uses: actions/cache@v3
        with:
          path: ~/.cache/huggingface
          key: huggingface-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            huggingface-${{ runner.os }}-

      - name: Download models
        run: |
          python3 -c "
          from transformers import RobertaTokenizer, RobertaModel;
          tokenizer = RobertaTokenizer.from_pretrained('microsoft/graphcodebert-base');
          model = RobertaModel.from_pretrained('microsoft/graphcodebert-base')"

      # Cache Gradle dependencies to speed up builds
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Grant execute permissions for the Gradle wrapper
      - name: Grant execute permissions for Gradle wrapper
        run: chmod +x ./gradlew

      # Run the Gradle clean task
      - name: Run Clean
        run: ./gradlew clean

      # Build the project
      - name: Build Project
        run: ./gradlew build

      # Run Tests
      - name: Run Tests
        run: ./gradlew test

      # Build the annotations JAR
      - name: Build Annotations JAR
        run: ./gradlew buildLib

      # Create the Fat JAR
      - name: Build Fat JAR
        run: ./gradlew fatJar

      # Upload the Annotations JAR
      - name: Upload Annotations JAR
        uses: actions/upload-artifact@v3
        with:
          name: fractalfathom-annotations
          path: build/libs/*-annotations.jar

      # Upload the Fat JAR
      - name: Upload Fat JAR
        uses: actions/upload-artifact@v3
        with:
          name: fractalfathom-cli-all
          path: build/libs/*-all.jar